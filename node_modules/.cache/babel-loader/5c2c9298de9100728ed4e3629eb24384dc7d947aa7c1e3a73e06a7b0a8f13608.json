{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\OneDrive\\\\Desktop\\\\myapp\\\\src\\\\components\\\\Faq.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Faq = () => {\n  const accordionData = {\n    title: 'Section 1',\n    content: `Lorem ipsum dolor, sit amet consectetur adipisicing elit. Quis sapiente\n      laborum cupiditate possimus labore, hic temporibus velit dicta earum\n      suscipit commodi eum enim atque at? Et perspiciatis dolore iure\n      voluptatem.`\n  };\n  const {\n    title,\n    content\n  } = accordionData;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Accordion Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accordion\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordion-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"accordion-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"accordion-content\",\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this)\n  // <section className='vh-md-100 bg-cover bg-no-repeat bg-star d-flex align-items-center justify-content-between mb--1 pt-5'>\n  //     <div className='container pt-5 mt-5'>\n  //         <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n  //             <div className=\"accordion-item\">\n  //                 <h2 className=\"accordion-header\" id=\"flush-headingOne\">\n  //                     <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\n  //                         Accordion Item #1\n  //                     </button>\n  //                 </h2>\n  //                 <div id=\"flush-collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushExample\">\n  //                     <div className=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> className. This is the first item's accordion body.</div>\n  //                 </div>\n  //             </div>\n  //             <div className=\"accordion-item\">\n  //                 <h2 className=\"accordion-header\" id=\"flush-headingTwo\">\n  //                     <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\n  //                         Accordion Item #2\n  //                     </button>\n  //                 </h2>\n  //                 <div id=\"flush-collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingTwo\" data-bs-parent=\"#accordionFlushExample\">\n  //                     <div className=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> className. This is the second item's accordion body. Let's imagine this being filled with some actual content.</div>\n  //                 </div>\n  //             </div>\n  //             <div className=\"accordion-item\">\n  //                 <h2 className=\"accordion-header\" id=\"flush-headingThree\">\n  //                     <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\n  //                         Accordion Item #3\n  //                     </button>\n  //                 </h2>\n  //                 <div id=\"flush-collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\" data-bs-parent=\"#accordionFlushExample\">\n  //                     <div className=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> className. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application.</div>\n  //                 </div>\n  //             </div>\n  //         </div>\n  //     </div>\n  // </section>\n  ;\n};\n_c = Faq;\nexport default Faq;\nvar _c;\n$RefreshReg$(_c, \"Faq\");","map":{"version":3,"names":["React","Faq","accordionData","title","content"],"sources":["C:/Users/dhruv/OneDrive/Desktop/myapp/src/components/Faq.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nconst Faq = () => {\r\n    const accordionData = {\r\n        title: 'Section 1',\r\n        content: `Lorem ipsum dolor, sit amet consectetur adipisicing elit. Quis sapiente\r\n      laborum cupiditate possimus labore, hic temporibus velit dicta earum\r\n      suscipit commodi eum enim atque at? Et perspiciatis dolore iure\r\n      voluptatem.`\r\n    }; const { title, content } = accordionData;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h1>React Accordion Demo</h1>\r\n            <div className=\"accordion\">\r\n                <div className=\"accordion-item\">\r\n                    <div className=\"accordion-title\">\r\n                        <div>{title}</div>\r\n                        <div>+</div>\r\n                    </div>\r\n                    <div className=\"accordion-content\">{content}</div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n        // <section className='vh-md-100 bg-cover bg-no-repeat bg-star d-flex align-items-center justify-content-between mb--1 pt-5'>\r\n        //     <div className='container pt-5 mt-5'>\r\n        //         <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\r\n        //             <div className=\"accordion-item\">\r\n        //                 <h2 className=\"accordion-header\" id=\"flush-headingOne\">\r\n        //                     <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\r\n        //                         Accordion Item #1\r\n        //                     </button>\r\n        //                 </h2>\r\n        //                 <div id=\"flush-collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushExample\">\r\n        //                     <div className=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> className. This is the first item's accordion body.</div>\r\n        //                 </div>\r\n        //             </div>\r\n        //             <div className=\"accordion-item\">\r\n        //                 <h2 className=\"accordion-header\" id=\"flush-headingTwo\">\r\n        //                     <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\r\n        //                         Accordion Item #2\r\n        //                     </button>\r\n        //                 </h2>\r\n        //                 <div id=\"flush-collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingTwo\" data-bs-parent=\"#accordionFlushExample\">\r\n        //                     <div className=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> className. This is the second item's accordion body. Let's imagine this being filled with some actual content.</div>\r\n        //                 </div>\r\n        //             </div>\r\n        //             <div className=\"accordion-item\">\r\n        //                 <h2 className=\"accordion-header\" id=\"flush-headingThree\">\r\n        //                     <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\r\n        //                         Accordion Item #3\r\n        //                     </button>\r\n        //                 </h2>\r\n        //                 <div id=\"flush-collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\" data-bs-parent=\"#accordionFlushExample\">\r\n        //                     <div className=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> className. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application.</div>\r\n        //                 </div>\r\n        //             </div>\r\n        //         </div>\r\n        //     </div>\r\n        // </section>\r\n\r\n    )\r\n}\r\n\r\nexport default Faq"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAEzB,MAAMC,GAAG,GAAG,MAAM;EACd,MAAMC,aAAa,GAAG;IAClBC,KAAK,EAAE,WAAW;IAClBC,OAAO,EAAG;AAClB;AACA;AACA;EACI,CAAC;EAAE,MAAM;IAAED,KAAK;IAAEC;EAAQ,CAAC,GAAGF,aAAa;EAE3C,oBACI,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACX;MAAA,UAAI;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAK,eAC7B;MAAK,SAAS,EAAC,WAAW;MAAA,uBACtB;QAAK,SAAS,EAAC,gBAAgB;QAAA,wBAC3B;UAAK,SAAS,EAAC,iBAAiB;UAAA,wBAC5B;YAAA,UAAMC;UAAK;YAAA;YAAA;YAAA;UAAA,QAAO,eAClB;YAAA,UAAK;UAAC;YAAA;YAAA;YAAA;UAAA,QAAM;QAAA;UAAA;UAAA;UAAA;QAAA,QACV,eACN;UAAK,SAAS,EAAC,mBAAmB;UAAA,UAAEC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA;IAChD;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA;EAEV;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAGR,CAAC;AAAA,KA5DKH,GAAG;AA8DT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}